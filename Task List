- #12
1. Language: Реализовать аналог множественного наследования
Используя трейты Country и City, реализовать класс Address, получающий в конструктор названия страны и города и отдающий строку вида 'Страна: <название>, Город: <название>' [trait.php]

2. Language: Использовать в разработке Reflection
1) Реализовать метод, принимающий название класса и возвращающий соответствующий объект
2) Реализовать класс, выполняющий последовательно все свои приватные методы

3. FW: Настроить контроль доступа на основе RBAC

4. FW: Реализовать REST API
Реализовать REST API для диспетчерской: автосервиса/SPA-салона/космопорта

5. Testing: Решить задачу с использованием TDD
Пример задачи: Сделать класс отчётов, выполняющий запросы к БД и складывающий результаты в публичную папку в виде CSV-файлов

6. PostgreSQL: Получать информацию о схеме с помощью SQL-запросов
1) Получить список столбцов таблицы
2) Получить первичный ключ таблицы
3) Получить название поле для связи двух таблиц, имеющих ограничение целостности в виде внешнего ключа

7. PostgreSQL: Получать информацию о процессах БД с помощью SQL-запросов
1) Получить список активных процессов
2) Получить список текущих блокировок
3) Получить список текущих эксклюзивных блокировок
4) Получить список “тяжёлых” запросов и времени их выполнения

8. JS: Использовать в разработке классы
Реализовать класс Employee, наследуемый от класса User, имеющий дополнительные поля "Должность" и "Зарплата". Поле "Зарплата" должно быть защищённым, при установке значение должно проверяться на отрицательное. Поле "Должность" должно быть приватным, при установке значение должно проверяться на соответствие списку допустимых (программер, руководитель) [class._js]

9. ssh+scp: Выполнять команды
Скопировать файл на удалённый сервер. Подключиться и удалить скопированный файл с удалённого сервера. Использовать файл настроек .ssh/config и сгенерированный ssh-ключ для доступа

10. Настроить web-сервер на отображение страниц по HTTPS с использованием самоподписанного SSL-сертификата